-- Th√¥ng b√°o kh·ªüi ƒë·ªông
game.StarterGui:SetCore("SendNotification", {
    Title = "L√™ Th√°i An",
    Text = "ƒêang T·∫£i...",
})
wait(2)
game.StarterGui:SetCore("SendNotification", {
    Title = "L√™ Th√°i An",
    Text = "ƒêang X√°c Minh Danh T√≠nh",
})
wait(5)
game.StarterGui:SetCore("SendNotification", {
    Title = "L√™ Th√°i An",
    Text = "ƒêang Thi·∫øt L·∫≠p...",
})
wait(2)
game.StarterGui:SetCore("SendNotification", {
    Title = "L√™ Th√°i An",
    Text = "Ch·∫°y Th√†nh C√¥ng !",
})
wait(0.5)
game.StarterGui:SetCore("SendNotification", {
    Title = "L√™ Th√°i An",
    Text = "follow my main account: [üëë]duydeohack",
})

-- Bi·∫øn v√† d·ªãch v·ª•
local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

local aimSpeed = 0.1
local isAimAssistEnabled = false
local predictionFactor = 5.4
local currentTarget = nil
local smoothingFactor = 0.02

-- H√†m d·ª± ƒëo√°n v·ªã tr√≠ m·ª•c ti√™u (Head)
local function predictTargetPosition(target, deltaTime)
    local targetPosition = target.Head.Position
    local targetVelocity = target:FindFirstChild("Humanoid") and target.HumanoidRootPart.Velocity or Vector3.new()
    local predictedPosition = targetPosition + targetVelocity * predictionFactor * deltaTime
    return predictedPosition
end

-- H√†m ƒëi·ªÅu ch·ªânh camera ng·∫Øm m·ª•c ti√™u
local function aimAtTarget()
    if currentTarget and currentTarget.Parent then
        local predictedPosition = predictTargetPosition(currentTarget, runService.RenderStepped:Wait())
        local lookVector = (predictedPosition - camera.CFrame.Position).Unit
        local smoothedLookVector = (1 - smoothingFactor) * lookVector + smoothingFactor * camera.CFrame.LookVector
        local newCFrame = CFrame.new(camera.CFrame.Position, camera.CFrame.Position + aimSpeed * smoothedLookVector)
        camera.CFrame = newCFrame
    else
        currentTarget = nil
        isAimAssistEnabled = false
    end
end

-- T√¨m ng∆∞·ªùi ch∆°i g·∫ßn chu·ªôt nh·∫•t (Head)
local function findClosestPlayerToMouse()
    local mousePos = userInputService:GetMouseLocation()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, object in pairs(game.Players:GetPlayers()) do
        if object ~= player and object.Character and object.Character:FindFirstChild("Humanoid") and object.Character:FindFirstChild("Head") then
            local targetScreenPos, onScreen = camera:WorldToScreenPoint(object.Character.Head.Position)
            if onScreen then
                local distance = (Vector2.new(targetScreenPos.X, targetScreenPos.Y) - mousePos).Magnitude
                if distance < shortestDistance then
                    closestPlayer = object.Character
                    shortestDistance = distance
                end
            end
        end
    end

    return closestPlayer
end

-- B·∫Øt s·ª± ki·ªán ph√≠m b·∫•m
local function onKeyPress(input, gameProcessedEvent)
    if not gameProcessedEvent then
        if input.KeyCode == Enum.KeyCode.C then
            isAimAssistEnabled = not isAimAssistEnabled
            if isAimAssistEnabled then
                currentTarget = findClosestPlayerToMouse()
            else
                currentTarget = nil
            end
            print("Aim Assist Toggled:", isAimAssistEnabled)
        end
    end
end

-- X·ª≠ l√Ω khi m·ª•c ti√™u ch·∫øt
local function onCharacterAdded(character)
    character:WaitForChild("Humanoid").Died:Connect(function()
        if currentTarget == character then
            currentTarget = nil
        end
    end)
end

-- K·∫øt n·ªëi s·ª± ki·ªán
userInputService.InputBegan:Connect(onKeyPress)
player.CharacterAdded:Connect(onCharacterAdded)

-- C·∫≠p nh·∫≠t li√™n t·ª•c m·ªói frame
runService.RenderStepped:Connect(function(deltaTime)
    if isAimAssistEnabled then
        aimAtTarget()
    end
end)
